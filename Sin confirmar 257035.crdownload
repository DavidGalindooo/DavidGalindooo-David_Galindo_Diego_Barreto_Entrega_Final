# -*- coding: utf-8 -*-
"""DAVID.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1o1GpCcp5XYY_YnT9BSZtTdduUWNF8_qi
"""

!pip install Dash

import plotly.express as px
import pandas as pd
import plotly.graph_objects as go
import dash
import dash_core_components as dcc
import dash_html_components as html
from dash import Dash

app = dash.Dash(__name__)

from google.colab import drive
drive.mount('/content/drive')

DATA = pd.read_excel('/content/drive/MyDrive/ACCIDENTALIDAD_BARRANQUILLA.xlsx')

DATA.head()

available_CLASE_VEHICULO_ACCIDENTE = DATA['CLASE_VEHICULO_VICTIMA'].unique()
available_SEXO_VICTIMA = DATA["SEXO_VICTIMA"].unique()

tab = DATA['CLASE_VEHICULO_VICTIMA'].value_counts().rename_axis('label').reset_index(name='counts')
tab

fig2 = go.Figure(data=[go.Pie(labels=tab['label'], values=tab['counts'], hole=.3)])
fig2

g1 = px.density_heatmap(DATA, x="SEXO_VICTIMA", y="CLASE_VEHICULO_VICTIMA")
g1

import seaborn as sns

sns.catplot(data = DATA,
            kind = "bar",
            estimator = sum,
            x = "CANTIDAD_VICTIMAS",
            y = "GRAVEDAD_ACCIDENTE",
            hue = "CLASE_VEHICULO_VICTIMA",
            col = "SEXO_VICTIMA",
            palette = 'magma',
            ci = None)

html.P(
    children="ACCIDENTALIDAD VEHICULAR EN LA CIUDAD DE BARRANQUILLA ENTRE LOS AÑOS 2016 Y 2018"
),
html.P(
    children=" La base de datos se tomó del portal web de datos abiertos Colombia"
    "Se cuenta con 10 variables y 3540 registros"
)

html.P(
    children="Visualizaciones"
)

html.Div([
          html.H1(children='Gráfico 1. Donut Chart'),
          html.Div(children='''
          En esta gráfica podemos ver el porcentaje de los accidentes que pertenece a cada vehiculo incluido en el estudio.
          '''),
          dcc.Dropdown(
              id='crossfilter_SEXO_VICTIMA',
              options=[{'label': i, 'value': i} for i in available_SEXO_VICTIMA]
              ),
          dcc.Graph(
              id='g2'
          )
          ])

html.Div([
          html.H2(children='Gráfico 2. heat map'),
          dcc.Graph(
              id='g3',
              figure=g1
              ),
          ],)

@app.callback(
    dash.dependencies.Output('g3', 'figure'),
    [dash.dependencies.Input('crossfilter_CLASE_VEHICULO_ACCIDENTE', 'value')]
    )
def update_graph(CLASE_VEHICULO_ACCIDENTE_value):
  cant_CLASE_VEHICULO_ACCIDENTE = cant[cant['CLASE_VEHICULO_ACCIDENTE'] == CLASE_VEHICULO_ACCIDENTE_value]
  fig4 = px.scatter_geo(cant_CLASE_VEHICULO_ACCIDENTE,
                      lat='y_geo',
                      lon='x_geo',
                      size="CANTIDAD_VICTIMAS",
                      center = {"lat": 10.9878, "lon": -74.7889})
  fig4.update_layout(
      title_text = 'Cantidad de accidentes',
      showlegend = True,
      geo = dict( scope = 'europe',
                 landcolor = 'rgb(217, 217, 217)'
                 )
  )
  
  return fig4

@app.callback(
    dash.dependencies.Output('g2', 'figure'),
    [dash.dependencies.Input('crossfilter_SEXO_VICTIMA', 'value')]
    )
def update_graph(SEXO_VICTIMA_value):
  cant_SEXO_VICTIMA = cant1[cant1['SEXO_VICTIMA'] == SEXO_VICTIMA_value]
  fig3 = px.scatter_geo(cant_SEXO_VICTIMA,
                        lat='y_geo',
                        lon='x_geo',
                        size="SEXO_VICTIMAS",
                        center = {"lat": 10.9878, "lon": -74.7889})
  return fig3

if __name__ == "__main__":
  app.run_server(debug=True)